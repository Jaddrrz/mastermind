#   def self.feedback_code(attempt, guesses, secret_code)
   
#     counter1 = 0
#     counter2 = 0

#     # Arrays to use as reference, each added element means position can't be used
#     test_array1 = Array.new(4)
#     test_array2 = Array.new(4)
  
#     # Reset variable
#     used = false
    
#     # guesses[attempt.to_i - 1].each_with_index do |color, index1|
#     #   wrong_spot = false # Reset the wrong_spot variable for every iteration

#     #   secret_code.each_with_index do |secret_color, index2|
#     #     if (color == secret_color) && (index1 == index2) # Check which colors are on same positions, that is indexes
#     #       counter1 += 1
#     #       wrong_spot = true
#     #       test_array[index1] = "X"
#     #       p test_array
#     #     elsif (color == secret_color) && (index1 != index2) && (wrong_spot == false) & (test_array[1] != "X") # Check the ones that are not on same position
#     #       counter2 += 1               
#     #       wrong_spot = true
#     #     end
#     #   end
#     # end

#     secret_code.each_with_index do |secret_color, index1|
#       guesses[attempt.to_i - 1].each_with_index do |color, index2|
#         if (color == secret_color) && (index1 == index2) # Check which colors are on same positions, that is indexes
#           counter1 += 1
       
#           test_array1[index1] = "X"
#           test_array2[index1] = "O"
#           p test_array1
#         end
#       end
#     end

#     secret_code.each_with_index do |secret_color, index1|
#       used = false # Reset used variable for every iteration

#       guesses[attempt.to_i - 1].each_with_index do |color, index2|
#         5
#         if (color == secret_color) && (index1 != index2) && (used == false) # Check the ones that are not on same position
#           counter2 += 1               
#           used = true # Prevent same color from being used for counter more than once
#           test_array2[index1] = "O"
#           p test_array2
#         end
#       end
#     end
    
#     puts "Feedback: #{counter1} on the right spot, #{counter2} on the wrong spot"
#   end
# end